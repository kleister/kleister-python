# coding: utf-8

"""
    Kleister OpenAPI

    API definition for Kleister, manage mod packs for Minecraft

    The version of the OpenAPI document: 1.0.0-alpha1
    Contact: kleister@webhippie.de
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kleister.api.pack_api import PackApi


class TestPackApi(unittest.TestCase):
    """PackApi unit test stubs"""

    def setUp(self) -> None:
        self.api = PackApi()

    def tearDown(self) -> None:
        pass

    def test_attach_build_to_version(self) -> None:
        """Test case for attach_build_to_version

        Attach a version to a build
        """
        pass

    def test_attach_pack_to_group(self) -> None:
        """Test case for attach_pack_to_group

        Attach a group to pack
        """
        pass

    def test_attach_pack_to_user(self) -> None:
        """Test case for attach_pack_to_user

        Attach a user to pack
        """
        pass

    def test_create_build(self) -> None:
        """Test case for create_build

        Create a new build for a pack
        """
        pass

    def test_create_pack(self) -> None:
        """Test case for create_pack

        Create a new pack
        """
        pass

    def test_delete_build(self) -> None:
        """Test case for delete_build

        Delete a specific build for a pack
        """
        pass

    def test_delete_build_from_version(self) -> None:
        """Test case for delete_build_from_version

        Unlink a version from a build
        """
        pass

    def test_delete_pack(self) -> None:
        """Test case for delete_pack

        Delete a specific pack
        """
        pass

    def test_delete_pack_from_group(self) -> None:
        """Test case for delete_pack_from_group

        Unlink a group from pack
        """
        pass

    def test_delete_pack_from_user(self) -> None:
        """Test case for delete_pack_from_user

        Unlink a user from pack
        """
        pass

    def test_list_build_versions(self) -> None:
        """Test case for list_build_versions

        Fetch all versions attached to build
        """
        pass

    def test_list_builds(self) -> None:
        """Test case for list_builds

        Fetch all available builds for a pack
        """
        pass

    def test_list_pack_groups(self) -> None:
        """Test case for list_pack_groups

        Fetch all groups attached to pack
        """
        pass

    def test_list_pack_users(self) -> None:
        """Test case for list_pack_users

        Fetch all users attached to pack
        """
        pass

    def test_list_packs(self) -> None:
        """Test case for list_packs

        Fetch all available packs
        """
        pass

    def test_permit_pack_group(self) -> None:
        """Test case for permit_pack_group

        Update group perms for pack
        """
        pass

    def test_permit_pack_user(self) -> None:
        """Test case for permit_pack_user

        Update user perms for pack
        """
        pass

    def test_show_build(self) -> None:
        """Test case for show_build

        Fetch a specific build for a pack
        """
        pass

    def test_show_pack(self) -> None:
        """Test case for show_pack

        Fetch a specific pack
        """
        pass

    def test_update_build(self) -> None:
        """Test case for update_build

        Update a specific build for a pack
        """
        pass

    def test_update_pack(self) -> None:
        """Test case for update_pack

        Update a specific pack
        """
        pass


if __name__ == '__main__':
    unittest.main()
