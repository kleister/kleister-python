# coding: utf-8

"""
    Kleister OpenAPI

    API definition for Kleister, manage mod packs for Minecraft

    The version of the OpenAPI document: 1.0.0-alpha1
    Contact: kleister@webhippie.de
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kleister.api.mod_api import ModApi


class TestModApi(unittest.TestCase):
    """ModApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ModApi()

    def tearDown(self) -> None:
        pass

    def test_attach_mod_to_team(self) -> None:
        """Test case for attach_mod_to_team

        Attach a team to mod
        """
        pass

    def test_attach_mod_to_user(self) -> None:
        """Test case for attach_mod_to_user

        Attach a user to mod
        """
        pass

    def test_attach_version_to_build(self) -> None:
        """Test case for attach_version_to_build

        Attach a build to a version
        """
        pass

    def test_create_mod(self) -> None:
        """Test case for create_mod

        Create a new mod
        """
        pass

    def test_create_version(self) -> None:
        """Test case for create_version

        Create a new version for a mod
        """
        pass

    def test_delete_mod(self) -> None:
        """Test case for delete_mod

        Delete a specific mod
        """
        pass

    def test_delete_mod_from_team(self) -> None:
        """Test case for delete_mod_from_team

        Unlink a team from mod
        """
        pass

    def test_delete_mod_from_user(self) -> None:
        """Test case for delete_mod_from_user

        Unlink a user from mod
        """
        pass

    def test_delete_version(self) -> None:
        """Test case for delete_version

        Delete a specific version for a mod
        """
        pass

    def test_delete_version_from_build(self) -> None:
        """Test case for delete_version_from_build

        Unlink a build from a version
        """
        pass

    def test_list_mod_teams(self) -> None:
        """Test case for list_mod_teams

        Fetch all teams attached to mod
        """
        pass

    def test_list_mod_users(self) -> None:
        """Test case for list_mod_users

        Fetch all users attached to mod
        """
        pass

    def test_list_mods(self) -> None:
        """Test case for list_mods

        Fetch all available mods
        """
        pass

    def test_list_version_builds(self) -> None:
        """Test case for list_version_builds

        Fetch all builds attached to version
        """
        pass

    def test_list_versions(self) -> None:
        """Test case for list_versions

        Fetch all available versions for a mod
        """
        pass

    def test_permit_mod_team(self) -> None:
        """Test case for permit_mod_team

        Update team perms for mod
        """
        pass

    def test_permit_mod_user(self) -> None:
        """Test case for permit_mod_user

        Update user perms for mod
        """
        pass

    def test_show_mod(self) -> None:
        """Test case for show_mod

        Fetch a specific mod
        """
        pass

    def test_show_version(self) -> None:
        """Test case for show_version

        Fetch a specific version for a mod
        """
        pass

    def test_update_mod(self) -> None:
        """Test case for update_mod

        Update a specific mod
        """
        pass

    def test_update_version(self) -> None:
        """Test case for update_version

        Update a specific version for a mod
        """
        pass


if __name__ == '__main__':
    unittest.main()
